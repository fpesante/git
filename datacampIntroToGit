### INTRODUCTION TO GIT ###
## I.A. INTRODUCTION TO GIT > Introduction to version control with Git ##
# Useful shell commands

pwd	#print working directory

ls #all files in directory

##Changing directory
cd archive #cd followed by the directory we want to move

##Editing a file
nano finance.csv #preview and modify files. Nano followed by a file name. Used to delete, add or change the content of a file. Save ctrl + 0; exit the editor ctrl + X
echo "Review for duplicate records" > todo.txt

echo "Review for duplicate records" >> todo.txt #append content

##Checking Git version
git --version

## Saving files
#######################################################
## I.B. INTRODUCTION TO GIT > SAVING FILES ##
##Parts of the project: Files and directories; repositories
##Staging and commiting
##Saving a draft: staging area
##Save files/update the repo: Commit changes
ls -a #show hidden files
na"49,M,No,Yes,Never,Yes,Yes,No"no report.md #to open a text editor report file	#save ctrl + 0; ctrl + X

##adding a sigle file
git add report.md #followed by the file name
git add . #adding all modified files

##Making a commit
git commit -m "Updating TODO list in report.md" #to add log message, for reference; should be short and concise

##Check the status of files
git status  #to know which files have or not changes and are in the staging area.

################# EXERCISES  #######################
## WHERE DOES GIT STORE INFORMATION ##
# Your home directory /home/repl contains a repo called mh_survey, which has a directory called data.

# Where is information about the history of the files in /home/repl/mh_survey/data stored?
/home/repl/mh_survey/.git

## THE GIT WORKFLOW ##
#Modify
echo
nano filename
#Draft
git add filename
git add .
#Save
git commit -m
#######
# Git project analyzing the mental health of employees working at tech companies.## 

## ADDING A FILE ##
# For the remainder of the course, you will be working on a Git project analyzing the mental health of employees working at tech companies.
# In this exercise, you will complete a version control workflow to modify the mental_health_survey.csv file.
# You are located in mh_survey/data, which contains the csv file you need to edit.
## INSTRUCTIONS ##
# 1. Add a new row of data at the end of mental_health_survey.csv containing: "49,M,No,Yes,Never,Yes,Yes,No"
echo "49,M,No,Yes,Never,Yes,Yes,No" >> mental_health_survey.csv
# 2. Place the updated file in the staging area.
git add mental_health_survey.csv
# 3. Commit the modified file with the log message "Adding one new participant's data"
git commit -m  "Adding one new participant's data"

## ADDING MULTIPLE FILES ##
# You've added one more task to the report.md and an extra row of participant data tomental_health_survey.csv files:
# report.md:
# TODO: Add data visualizations.
# mental_health_survey.csv:
# 49,M,No,Yes,Never,Yes,Yes,No
# You need to figure out which files are in the repo, and which are in the staging area, so you can update everything.
## INSTRUCTIONS ##
# 1. Check which files are in the staging area but not yet committed.
git status
# 2. Add all files in your current directory and all subdirectories into the staging area.
git add .
# 3. Commit all files in the staging area with the log message "Added 3 participants and a new section in report"
git commit -m "Added 3 participants and a new section in report"

# git status is a great way to see where you are in the version control workflow, allowing you to take steps to ensure everything is up-to-date. The commit output shows that two files were changed!
#####################################################
## I.C. INTRODUCTION TO GIT > COMPARING FILES ##
# Comparing a single file
nano report.md
      #Mental health in Tech Survey                  #adding task to complete
      TODO: write executive summary.
      TODO: include link to raw data.
      TODO: add refrences.
      TODO: add summary statistics.
# Updating the file
git add .  #to add the report to the staging area
git commit -m "Adding task for references and summary statistics in report.md # commit our changes
git diff report.md      #comparing and unstaged file with the last commit
# @@ -1,5 +1,5 @@      #report line changes: 1 lines removed from line 5; 1 lines added to line 5
# lines with - symbol: removed line
# lines with + symblo: added line

# Comparing a staged file with the last commit
git add report.md
git diff -r HEAD report.md # to look for a particular edition in the file

# Comparing multiple staged files with the last commit

cd data #to switch into the data directory
nano mh_tech_survey.csv # to modify csv to add an extra participant's survey responses
git add mh_tech_survey.csv # add the file to the staging area.
git diff -r HEAD #to look at all files in the staging area
